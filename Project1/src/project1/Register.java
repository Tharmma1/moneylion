package project1;

import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.security.MessageDigest;
import javax.swing.ImageIcon;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

/**
 *
 * @author tharmma
 */

public class Register extends javax.swing.JFrame {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        
        private static boolean num = false;
        private static boolean uppercase = false;
        private static boolean lowercase = false;
        private static boolean symbols = false;
        private static boolean email = false;
        
    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txt_firstname = new javax.swing.JTextField();
        txt_lastname = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_ssn = new javax.swing.JTextField();
        txt_answer = new javax.swing.JTextField();
        cb_securityquestion = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cb_showpassword = new javax.swing.JCheckBox();
        txt_password = new javax.swing.JPasswordField();
        txt_confirmpassword = new javax.swing.JPasswordField();
        jLabel13 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Register");

        jLabel2.setText("First Name");

        jLabel3.setText("Last Name");

        jLabel4.setText("User Name");

        jLabel5.setText("Password");

        jLabel6.setText("Confirm Password");

        jLabel7.setText("Security Question");

        jLabel8.setText("Answer");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt_firstname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_firstnameKeyTyped(evt);
            }
        });

        txt_lastname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_lastnameKeyTyped(evt);
            }
        });

        txt_username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_usernameKeyTyped(evt);
            }
        });

        jLabel9.setText("Email");

        jLabel10.setText("SSN");

        txt_ssn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ssnKeyTyped(evt);
            }
        });

        txt_answer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_answerKeyTyped(evt);
            }
        });

        cb_securityquestion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hometown", "Fav Car", "School" }));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("password must meet complexity requirements");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("Capital letter, small letter, number and symbols");

        cb_showpassword.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cb_showpasswordMouseMoved(evt);
            }
        });
        cb_showpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_showpasswordActionPerformed(evt);
            }
        });

        txt_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passwordActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("Username should be minimum 6 characters");

        jButton2.setText("Login");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_ssn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cb_showpassword)))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_lastname, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(txt_email)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(9, 9, 9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(8, 8, 8)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cb_securityquestion, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8))
                                    .addComponent(txt_confirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(txt_answer, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_ssn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(txt_answer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_securityquestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(txt_confirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cb_showpassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        conn = Phpmyadmin.ConnectDB();
        String checkusername = "Select * from login where username='"+txt_username.getText()+"'";
        
        try
        {
            pst = conn.prepareStatement(checkusername);
            rs = pst.executeQuery();
            if(rs.next())
            {
                JOptionPane.showMessageDialog(null, "Username already exist");
            }
            else
            {
                if(txt_firstname.getText().equals(""))
                JOptionPane.showMessageDialog(null, "FirstName field is empty");
                
                if(txt_lastname.getText().equals(""))
                JOptionPane.showMessageDialog(null, "Lastname field is empty");
                
                if(txt_username.getText().equals(""))
                JOptionPane.showMessageDialog(null, "Username field is empty");
                
                if(txt_email.getText().equals(""))
                JOptionPane.showMessageDialog(null, "Email field is empty");
                
                if(txt_ssn.getText().equals(""))
                JOptionPane.showMessageDialog(null, "SSN field is empty");
                
                if(txt_answer.getText().equals(""))
                JOptionPane.showMessageDialog(null, "Answer field is empty");
                
                if(txt_password.getText().equals(""))
                JOptionPane.showMessageDialog(null, "SSN field is empty");
                
                if(txt_confirmpassword.getText().equals(""))
                JOptionPane.showMessageDialog(null, "SSN field is empty");
                
                else
                {   
                if(!txt_firstname.getText().isEmpty() && !txt_lastname.getText().isEmpty() && !txt_username.getText().isEmpty() && !txt_email.getText().isEmpty() && !txt_ssn.getText().isEmpty() && !txt_answer.getText().isEmpty() && !txt_password.getText().isEmpty() && !txt_confirmpassword.getText().isEmpty())
                if(txt_password.getText().equals(txt_confirmpassword.getText()))
                {
                    if(txt_username.getText().length()>=6)
                    {
                        Pattern pattemail = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$",Pattern.CASE_INSENSITIVE);
                        Matcher matemail = pattemail.matcher(txt_email.getText());
                        if(!txt_email.getText().isEmpty() && !matemail.matches())
                        {
                            JOptionPane.showMessageDialog(null, "Invalid email");
                        }
                        else
                        {
                            Pattern sPattern = Pattern.compile("[a-zA-Z0-9]*");
                            Matcher sMatcher = sPattern.matcher(txt_password.getText());
                            if(txt_password.getText().length()>=8 && !sMatcher.matches())
                            {        
                                conn = Phpmyadmin.ConnectDB();

                                String sql = "INSERT INTO login ("
                                +"username,"
                                +"password,"
                                +"firstname,"
                                +"lastname,"
                                +"email,"
                                +"ssn,"
                                +"securityquestion,"
                                +"securityanswer)"
                                +"values('"+txt_username.getText()+"', '"+md5(txt_password.getText().toCharArray())+"', '"+txt_firstname.getText()+"', '"+txt_lastname.getText()+"', '"+txt_email.getText()+"', '"+txt_ssn.getText()+"', '"+md5(cb_securityquestion.getSelectedItem().toString().toCharArray())+"' ,'"+md5(txt_answer.getText().toCharArray())+"')";

                                try
                                {
                                    pst = conn.prepareStatement(sql);
                                    pst.execute();
                                    JOptionPane.showMessageDialog(null, "Successfully registered, Login now");
                                    new Login().setVisible(true);
                                    this.dispose();
                                }
                                catch(Exception e)
                                {

                                }    
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "Password lenght should be more than 8 characters with Upper case, lower case, number and symbols");
                            }
                        }


                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Username should be more than 6 characters");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Password does not match, Try again");
                    txt_confirmpassword.setText("");
                }
                }
                
            }
        }
        catch (Exception e)
        {
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cb_showpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_showpasswordActionPerformed
        if(cb_showpassword.isSelected())
        {
          txt_password.setEchoChar((char)0); //is set to 0 to show the characters, if set to other num it will be showing diff text
        }
        else
        {
          txt_password.setEchoChar('*');
        }
    }//GEN-LAST:event_cb_showpasswordActionPerformed

    private void txt_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_passwordActionPerformed

    private void txt_ssnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ssnKeyTyped
        char num = evt.getKeyChar();
        if(!(Character.isDigit(num) || (num==KeyEvent.VK_BACKSPACE || num==KeyEvent.VK_DELETE)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txt_ssnKeyTyped

    private void txt_usernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_usernameKeyTyped
        char logininput = evt.getKeyChar();
        if(!(Character.isDigit(logininput) || (logininput==KeyEvent.VK_BACKSPACE || logininput==KeyEvent.VK_DELETE) || Character.isAlphabetic(logininput)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txt_usernameKeyTyped

    private void txt_firstnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_firstnameKeyTyped
        char logininput = evt.getKeyChar();
        if(!(Character.isDigit(logininput) || (logininput==KeyEvent.VK_BACKSPACE || logininput==KeyEvent.VK_DELETE) || Character.isAlphabetic(logininput)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txt_firstnameKeyTyped

    private void txt_lastnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lastnameKeyTyped
        char logininput = evt.getKeyChar();
        if(!(Character.isDigit(logininput) || (logininput==KeyEvent.VK_BACKSPACE || logininput==KeyEvent.VK_DELETE) || Character.isAlphabetic(logininput)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txt_lastnameKeyTyped

    private void txt_answerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_answerKeyTyped
        char logininput = evt.getKeyChar();
        if(!(Character.isDigit(logininput) || (logininput==KeyEvent.VK_BACKSPACE || logininput==KeyEvent.VK_DELETE) || Character.isAlphabetic(logininput)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txt_answerKeyTyped

    private void cb_showpasswordMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cb_showpasswordMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_showpasswordMouseMoved

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    private String md5(char[] c)
    {
        try
        {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update((new String(c)).getBytes());
            String str = new String (md.digest());
            return str;
        }
        catch(Exception e)
        {
            
        }
        return "";
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_securityquestion;
    private javax.swing.JCheckBox cb_showpassword;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txt_answer;
    private javax.swing.JPasswordField txt_confirmpassword;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_firstname;
    private javax.swing.JTextField txt_lastname;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_ssn;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
